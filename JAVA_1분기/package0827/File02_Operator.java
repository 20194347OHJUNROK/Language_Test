package package0827;

public class File02_Operator {

	public static void main(String[] args) {
		 // 연산자(Operator)
		// - 연산 : 주어진 식을 계산하여 결과를 얻어내는 과정
		// - 연산자 : 연산을 하기 위한 문자(기호)
		
		// 형 변환
		// - 자동 형 변환
		// - 컴파일러가 피연산자의 타입이 일치하지않은경우 자동으로
		//	 데이터의 타입을 변환시켜주는 경우(정수 → 실수 , 크기 작 → 크기 크)
		
		// - 강제 형 변환
		//	개발자가 필요에 의해 강제로 변환해야하는 경우
		// 변환해야할 데이터 앞에 소괄호를 사용하여 데이터 타입을 명시
		// * 데이터의 손실이 발생할수있다는것을 명시할것!
		
		//(1) double  c = (double)(10/7);
		// double c = (double)(10/7);
		// double c = (double)(1);
		// double c = 1.0
		
		//(2) double c =(double)10 / (double)7; 
		// 둘다 강제 형 변환에 의해 10.0 / 7.0으로 전환
		
		//(3)
		double c =(double)10 / 7; 
		// 강제 형 변환에 의해 10.0으로 자동 형 변환에 의해 7.0으로 전환
		
		System.out.println("c : " + c);
		//================================================================================================================
		
		// 산술 연산자
		// - 나눗셈과 나머지 연산
		// - (1) : 배수를 확인하거나 검사하는경우
		//		 : n의 배수 : n, n*2, n*3, ....
		//		 : n으로 나누어 떨어지는 수 = n으로 나누었을때 나머지가 0인 수
		
		// - (2) : 그룹 관련 활용
		//		 : 100개의 데이터가 있을때 이를 7그룹으로 나누고 싶을때 
		//		 : 각 그룹에 몇개의 데이터가 포함되고 포함되지않는지 데이터의 수를 구할수있다.
		//		 : 각 그룹에 포함된 데이터의 수 : 100 / 7
		//		 : 각 그룹에 포함되지 않는 데이터의 수 : 100 % 7
		//	 		n번째 데이터의 그룹 : n % 7
		
		// - (3) : 단위 변환
		//			kg ↔ g , byte ↔ kb, 숫자 분할
		
		int num2 = 53;
		
		// 십의 자리
		int two_Digit = num2/10;
		// 일의 자리
		int one_Digit = num2%10;
		System.out.print(num2 + "의 십의 자리 : ");
		System.out.println(two_Digit);
		System.out.print(num2 + "의 일의 자리 : ");
		System.out.println(one_Digit);
	}

}
